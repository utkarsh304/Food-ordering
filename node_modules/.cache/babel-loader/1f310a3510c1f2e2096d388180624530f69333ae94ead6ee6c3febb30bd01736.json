{"ast":null,"code":"var _jsxFileName = \"C:\\\\Complete Web Development\\\\React.js\\\\01-starting-project\\\\src\\\\Components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useState } from \"react\";\n\n// const DUMMY_MEALS = [\n//     {\n//         id: 'm1',\n//         name: 'Sushi',\n//         description: 'Finest fish and veggies',\n//         price: 22.99,\n//     },\n//     {\n//         id: 'm2',\n//         name: 'Schnitzel',\n//         description: 'A german specialty!',\n//         price: 16.5,\n//     },\n//     {\n//         id: 'm3',\n//         name: 'Barbecue Burger',\n//         description: 'American, raw, meaty',\n//         price: 12.99,\n//     },\n//     {\n//         id: 'm4',\n//         name: 'Green Bowl',\n//         description: 'Healthy...and green...',\n//         price: 18.99,\n//     },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\"https://food-order-app-8c6df-default-rtdb.firebaseio.com/meals.json\"); // At last in dataBase url, /meals is the name of database created in the firebase.\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n      ;\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this));\n\n  // const mealsList = DUMMY_MEALS.map((meal) => \n  //         <MealItem\n  //             key={meal.id}\n  //             id={meal.id}\n  //             name={meal.name}\n  //             description={meal.description}\n  //             price={meal.price}\n  //         />\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["Card","MealItem","classes","useEffect","useState","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","className","MealsLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","MealsError","mealsList","map","meal","_c","$RefreshReg$"],"sources":["C:/Complete Web Development/React.js/01-starting-project/src/Components/Meals/AvailableMeals.js"],"sourcesContent":["import Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// const DUMMY_MEALS = [\r\n//     {\r\n//         id: 'm1',\r\n//         name: 'Sushi',\r\n//         description: 'Finest fish and veggies',\r\n//         price: 22.99,\r\n//     },\r\n//     {\r\n//         id: 'm2',\r\n//         name: 'Schnitzel',\r\n//         description: 'A german specialty!',\r\n//         price: 16.5,\r\n//     },\r\n//     {\r\n//         id: 'm3',\r\n//         name: 'Barbecue Burger',\r\n//         description: 'American, raw, meaty',\r\n//         price: 12.99,\r\n//     },\r\n//     {\r\n//         id: 'm4',\r\n//         name: 'Green Bowl',\r\n//         description: 'Healthy...and green...',\r\n//         price: 18.99,\r\n//     },\r\n// ];\r\n\r\nconst AvailableMeals = () => {\r\n    const [meals, setMeals] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [httpError, setHttpError] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchMeals = async () => {\r\n            const response = await fetch(\"https://food-order-app-8c6df-default-rtdb.firebaseio.com/meals.json\");    // At last in dataBase url, /meals is the name of database created in the firebase.\r\n            if (!response.ok) {\r\n                throw new Error(\"Something went wrong!\");\r\n            }\r\n            const responseData = await response.json();\r\n\r\n            const loadedMeals = [];\r\n\r\n            for (const key in responseData) {\r\n                loadedMeals.push({\r\n                    id: key,\r\n                    name: responseData[key].name,\r\n                    description: responseData[key].description,\r\n                    price: responseData[key].price\r\n                });\r\n            };\r\n\r\n            setMeals(loadedMeals);\r\n            setIsLoading(false);\r\n        };\r\n\r\n        fetchMeals().catch(error => {\r\n            setIsLoading(false);\r\n            setHttpError(error.message);\r\n        });\r\n    }, []);\r\n\r\n    if (isLoading) {\r\n        return <section className={classes.MealsLoading}>\r\n            <p>Loading...</p>\r\n        </section>\r\n    }\r\n\r\n    if (httpError) {\r\n        return <section className={classes.MealsError}>\r\n            <p>{httpError}</p>\r\n        </section>\r\n    }\r\n\r\n    const mealsList = meals.map((meal) =>\r\n        <MealItem\r\n            key={meal.id}\r\n            id={meal.id}\r\n            name={meal.name}\r\n            description={meal.description}\r\n            price={meal.price}\r\n        />\r\n    );\r\n\r\n    // const mealsList = DUMMY_MEALS.map((meal) => \r\n    //         <MealItem\r\n    //             key={meal.id}\r\n    //             id={meal.id}\r\n    //             name={meal.name}\r\n    //             description={meal.description}\r\n    //             price={meal.price}\r\n    //         />\r\n    // );\r\n\r\n    return (\r\n        <section className={classes.meals}>\r\n            <Card>\r\n                <ul>\r\n                    {mealsList}\r\n                </ul>\r\n            </Card>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AvailableMeals;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}